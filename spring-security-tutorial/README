# Définition du provider AWS
provider "aws" {
  region = var.aws_region
}

# Module pour l'instance EC2 privée
module "private_ec2_instance" {
  source = "../../modules/ec2-apps"

  environment   = "dev"
  instance_type = var.instance_type
  
  # Configuration réseau privée
  vpc_id        = var.vpc_id
  subnet_id     = var.subnet_id
  associate_public_ip_address = false

  # Variables d'environnement pour les applications
  app_environment_variables = merge(
    {
      # Variables communes
      ENVIRONMENT = "dev"
      
      # Ports des services
      AUTH_SERVICE_PORT = "3000"
      API_SERVICE_PORT  = "3001"
      
      # Configuration multi-schémas
      ACTIVE_SCHEMA    = var.active_schema      # Schéma actuellement utilisé
      ROLLBACK_SCHEMA  = var.rollback_schema    # Schéma de rollback si besoin
      
      # Liste des schémas disponibles pour référence
      SCHEMA_1         = var.schema_1_name
      SCHEMA_2         = var.schema_2_name
      SCHEMA_3         = var.schema_3_name
      SCHEMA_4         = var.schema_4_name
    },
    var.database_enabled ? {
      # Configuration de base Oracle
      DB_HOST     = var.db_host
      DB_PORT     = var.db_port
      DB_NAME     = var.db_name
      DB_USER     = var.db_user
      DB_PASSWORD = var.db_password
      
      # Variables Oracle si base locale
      ORACLE_HOME = var.db_host == "localhost" ? "/u01/app/oracle/product/19.0.0/dbhome_1" : null
      ORACLE_SID  = var.db_host == "localhost" ? var.db_name : null
      ORACLE_BASE = var.db_host == "localhost" ? "/u01/app/oracle" : null
    } : {}
  )

  # Configuration des volumes (si Oracle local)
  dynamic "ebs_volumes" {
    for_each = var.database_enabled && var.db_host == "localhost" ? [1] : []
    content {
      oracle_data = {
        size = 100
        type = "gp3"
        mount_point = "/u01"
      }
    }
  }

  # AMI ID 
  ami_id = var.database_enabled && var.db_host == "localhost" ? var.oracle_ami_id : var.base_ami_id

  tags = merge(
    {
      Environment     = "dev"
      Project         = "cats"
      ManagedBy       = "terraform"
      Confidentiality = "high"
      Internal        = "true"
      ActiveSchema    = var.active_schema
    },
    var.database_enabled ? {
      Database = "oracle"
    } : {}
  )

  # Sécurité
  security_group_rules = {
    internal_only = true
    allowed_cidr_blocks = var.internal_cidr_blocks
  }
}

# Configuration réseau
vpc_id              = "vpc-xxxxxx"
subnet_id           = "subnet-xxxxxx"
internal_cidr_blocks = ["10.0.0.0/16"]

# Configuration EC2
instance_type = "t2.large"
base_ami_id   = "ami-xxxxx"
oracle_ami_id = "ami-yyyyy"

# Configuration base de données
database_enabled = true
db_host         = "localhost"
db_port         = "1521"
db_name         = "CATSDEV"
db_user         = "admin"
db_password     = "votre_mot_de_passe_secure"

# Configuration schémas
active_schema     = "cats_schema_1"
rollback_schema   = "cats_schema_2"
schema_1_name     = "cats_schema_1"
schema_2_name     = "cats_schema_2"
schema_3_name     = "cats_schema_3"
schema_4_name     = "cats_schema_4"
