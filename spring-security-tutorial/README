include:
  - project: 'app/app-00451/microservices/ci-common'
    ref: "feature/maven_3-9-4_java-17"
    file: 'includes.yml'
  - project: 'ci/stable/sdlc-templates/notification'
    ref: '0.0.8'
    file: 'templates/notification.yml'

default:
  tags: 
    - LSEG
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/maven:3.9.4-eclipse-temurin-17

variables:
  extends: .sonarqube_variables
  APP_ID: "APP-00451"
  LSEG_VAULT_NAMESPACE: "aws"
  ARTIFACT_ID: "cats-gateway-${ARTIFACT_VERSION}.jar"
  ARTIFACT_VERSION:
    value: "${CI_COMMIT_SHORT_SHA}"
    description: "artifact version or else CI_COMMIT_SHORT_SHA"
  PROJECT_ID: "cats-gateway"
  PROJECT_NAME: "app-00451_cats-gateway"
  PROJECT_VERSION: "latest"
  COV_BUILD_CMD: "make build"
  POM_FILE_LOCATION: "./pom.xml"
  SONAR_PROJECT_KEY: "app-00451_cats-gateway"
  REPOSITORY_NAME: "${PROJECT_ID}"
  REMOTE_USER: "ec2-user"
  REMOTE_HOST:
    value: "10.95.108.151"
    description: "IP of the EC2 to install the app"
  REMOTE_WORKING_DIR: "/opt/java/"

cache:
  key: maven-cache-${ARTIFACT_VERSION}
  paths:
    - .m2/repository
    - target/

stages:
  - prepare
  - compile
  - test
  - package
  - quality
  - security
  - publish

# Stage: prepare
vault:retrieve-secrets:
  stage: prepare
  extends: .vault-secret-retriever
  variables:
    VS_SECRET_LIST: |
      SONAR_HOST_URL@gitlab/app-00451/kv/sonarqube@SONAR_HOST_URL
      SONAR_TOKEN@gitlab/app-00451/kv/sonarqube@SONAR_USER_TOKEN
      SONAR_CERT@gitlab/app-00451/kv/sonarqube@SONAR_CERT
      NEXUS_CERT@gitlab/app-00451/kv/nexus@NEXUS_CERT
      CATS_KEY_PAIR@gitlab/app-00451/kv/aws-cat-poc@EC2-KEY-PAIR

# Stage: compile
build:compile:
  stage: compile
  extends: .maven-compile
  needs:
    - vault:retrieve-secrets

# Stage: test
build:test:
  stage: test
  extends: .maven-test
  needs:
    - build:compile
  dependencies:
    - build:compile

# Stage: package
build:package:
  stage: package
  extends: .maven-build
  needs:
    - build:test
  dependencies:
    - build:test
  artifacts:
    paths:
      - target/${ARTIFACT_ID}
    expire_in: 1 day

# Stage: quality
quality:sonar:
  stage: quality
  extends: 
    - .maven-shared
    - .sonarqube-code-scan
  before_script:
    - !reference [.vault-artifact-decrypter, before_script]
    - !reference [.maven-shared, before_script]
  needs:
    - vault:retrieve-secrets
    - build:test

quality:coverage:
  stage: quality
  extends: .coverage
  needs:
    - quality:sonar
  dependencies:
    - quality:sonar
  allow_failure: true
  script:
    - mkdir -p target/site
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: target/site/cobertura.xml

# Stage: security
security:semgrep:
  stage: security
  before_script:
    - export no_proxy=$no_proxy,lseg.com
  extends: .semgrep-lseg-sast
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  needs:
    - quality:sonar

# Stage: publish
publish:registry:
  stage: publish
  script:
    - echo "Uploading the artifact to GITLAB Repository"
    - |
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" \
           --upload-file target/${ARTIFACT_ID} \
           "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/cats/cats-gateway/${ARTIFACT_VERSION}/${ARTIFACT_ID}"
  needs:
    - job: build:package
      artifacts: true
