# Variables région AWS
variable "aws_region" {
  description = "Région AWS pour le déploiement"
  type        = string
  default     = "eu-west-3"  # Paris
}

# Variables réseau
variable "vpc_id" {
  description = "ID du VPC"
  type        = string
}

variable "subnet_id" {
  description = "ID du subnet"
  type        = string
}

variable "internal_cidr_blocks" {
  description = "Liste des CIDR blocks autorisés"
  type        = list(string)
}

# Variables instance EC2
variable "instance_type" {
  description = "Type d'instance EC2"
  type        = string
  default     = "t2.large"  # À ajuster selon les besoins d'Oracle
}

# Variables base de données
variable "database_enabled" {
  description = "Active ou désactive la configuration de la base de données"
  type        = bool
  default     = true
}

variable "db_host" {
  description = "Hôte de la base de données"
  type        = string
  default     = "localhost"
}

variable "db_port" {
  description = "Port de la base de données"
  type        = string
  default     = "1521"
}

variable "db_name" {
  description = "Nom de la base de données"
  type        = string
}

variable "db_user" {
  description = "Utilisateur de la base de données"
  type        = string
}

variable "db_password" {
  description = "Mot de passe de la base de données"
  type        = string
  sensitive   = true
}

# Variables schémas
variable "active_schema" {
  description = "Schéma actuellement utilisé par les applications"
  type        = string
}

variable "rollback_schema" {
  description = "Schéma de rollback en cas de problème"
  type        = string
}

variable "schema_1_name" {
  description = "Nom du premier schéma"
  type        = string
  default     = "cats_schema_1"
}

variable "schema_2_name" {
  description = "Nom du deuxième schéma"
  type        = string
  default     = "cats_schema_2"
}

variable "schema_3_name" {
  description = "Nom du troisième schéma"
  type        = string
  default     = "cats_schema_3"
}

variable "schema_4_name" {
  description = "Nom du quatrième schéma"
  type        = string
  default     = "cats_schema_4"
}

# Tags communs
variable "project_tags" {
  description = "Tags communs pour toutes les ressources"
  type        = map(string)
  default     = {
    Project     = "cats"
    ManagedBy   = "terraform"
    Internal    = "true"
  }
}

# Définition du provider AWS
provider "aws" {
  region = var.aws_region
}

# Module pour l'instance EC2 privée
module "private_ec2_instance" {
  source = "../../modules/ec2-apps"

  environment   = "dev"
  instance_type = var.instance_type
  
  # Configuration réseau privée
  vpc_id        = var.vpc_id
  subnet_id     = var.subnet_id
  associate_public_ip_address = false

  # Variables d'environnement pour les applications
  app_environment_variables = merge(
    {
      # Variables communes
      ENVIRONMENT = "dev"
      
      # Ports des services
      AUTH_SERVICE_PORT = "3000"
      API_SERVICE_PORT  = "3001"
      
      # Configuration multi-schémas
      ACTIVE_SCHEMA    = var.active_schema      # Schéma actuellement utilisé
      ROLLBACK_SCHEMA  = var.rollback_schema    # Schéma de rollback si besoin
      
      # Liste des schémas disponibles
      SCHEMA_1         = var.schema_1_name
      SCHEMA_2         = var.schema_2_name
      SCHEMA_3         = var.schema_3_name
      SCHEMA_4         = var.schema_4_name
    },
    var.database_enabled ? {
      # Configuration de la base de données
      DB_HOST     = var.db_host
      DB_PORT     = var.db_port
      DB_NAME     = var.db_name
      DB_USER     = var.db_user
      DB_PASSWORD = var.db_password
    } : {}
  )

  # Configuration des volumes pour les données
  ebs_block_device {
    device_name = "/dev/sdb"
    volume_size = 100
    volume_type = "gp3"
    encrypted   = true
    
    tags = {
      Name = "data-volume"
    }
  }

  tags = merge(
    var.project_tags,
    {
      Environment  = "dev"
      ActiveSchema = var.active_schema
    }
  )

  # Configuration de sécurité
  security_group_rules = {
    internal_only = true
    allowed_cidr_blocks = var.internal_cidr_blocks
  }
}
